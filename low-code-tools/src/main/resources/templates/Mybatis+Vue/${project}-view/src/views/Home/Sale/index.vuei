<template>
  <div>
    <a-card class="box-card">
      <div slot="header" class="clearfix">
        <!--tabs组件-->
        <!--头部左侧内容-->
        <a-tabs v-model="activeName" class="tab">
          <a-tab-pane label="销售额" name="sale" />
          <a-tab-pane label="访问量" name="visited" />
        </a-tabs>
        <!--头部右侧内容-->
        <div class="right">
          <span @click="setDay">今日</span>
          <span @click="setWeek">本周</span>
          <span @click="setMonth">本月</span>
          <span @click="setYear">本年</span>
          <a-date-picker
            v-model="date"
            class="date"
            type="daterange"
            value-format="yyyy-MM-dd"
            range-separator="-"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            size="mini"
          />
        </div>
      </div>
      <div>
        <a-row :gutter="10">
          <a-col :span="24">
            <div ref="charts" class="charts">
              123
            </div>
          </a-col>
        </a-row>
      </div>
    </a-card>
  </div>
</template>

<script>
import dayjs from 'dayjs'
import * as echarts from 'echarts'
export default {
  name: 'Sale',
  data() {
    return {
      activeName: 'sale',
      myCharts: null,
      // 收集日历数据
      date: []
    }
  },
  computed: {
    // 计算属性标题
    title() {
      return this.activeName === 'sale' ? '销售额' : '访问量'
    }
  },
  // 监听属性
  watch: {
    title() {
      // 重新修改图表的配置数据
      // 图表配置数据可以再次修改，如果有新的数值，使用新的数值
      this.myCharts.setOption({
        title: {
          text: this.title + '趋势'
        }
      })
    }
  },
  mounted() {
    this.myCharts = echarts.init(this.$refs.charts)
    // 配置数据
    this.myCharts.setOption({
      title: {
        text: this.title + '趋势'
      },
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          type: 'shadow'
        }
      },
      grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
      },
      xAxis: [
        {
          type: 'category',
          data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
          axisTick: {
            alignWithLabel: true
          }
        }
      ],
      yAxis: [
        {
          type: 'value'
        }
      ],
      series: [
        {
          name: 'Direct',
          type: 'bar',
          barWidth: '60%',
          data: [10, 52, 200, 334, 390, 330, 220, 235, 765, 221, 324, 546]
        }
      ]
    })
  },
  methods: {
    setDay() {
      const day = dayjs().format('YYYY-MM-DD')
      this.date = [day, day]
    },
    setWeek() {
      const start = dayjs().day(1).format('YYYY-MM-DD')
      const end = dayjs().day(7).format('YYYY-MM-DD')
      this.date = [start, end]
    },
    setMonth() {
      const start = dayjs().startOf('month').format('YYYY-MM-DD')
      const end = dayjs().endOf('month').format('YYYY-MM-DD')
      this.date = [start, end]
    },
    setYear() {
      const start = dayjs().startOf('year').format('YYYY-MM-DD')
      const end = dayjs().endOf('year').format('YYYY-MM-DD')
      this.date = [start, end]
    }
  }
}
</script>

<style scoped>
.box-card{
  margin: 10px 0;
}
.clearfix {
  position: relative;
  display: flex;
  justify-content: space-between;
}
.tab {
  width: 100%;
}
.right {
  position: absolute;
  right: 0px;
}
.date {
  width: 220px;
  margin: 0 20px;
}
.right span {
  margin: 0 10px;
}
.charts{
  width: 100%;
  height: 300px;
}
ul {
  list-style: none;
  width: 100%;
  height: 300px;
  padding:0;
}
ul li {
  margin: 10px 0;
}
/*li span:nth-child(2) {*/
/*  padding: 0 0 0 20px;*/
/*}*/
.rIndex {
  float: left;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: black;
  color: #FFF;
  text-align: center;
}
/*.rvalue {*/
/*  float: right;*/
/*}*/
ul li{
  display: flex;
  justify-content: space-around;
  align-items: center;
}
</style>
